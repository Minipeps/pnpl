%loading template
load template_pnp.mat;

%solver parameter
settings.debug      = 0;        % debug mode : very slow
settings.full_QR1   = 0;        % turn on sparse QR
settings.p_inverter = 'all';    % use 'all' to use the 'best' inverter
settings.real       = 1;        % 1: only output real solutions 
settings.cutoff_threshold = 1e12;

a1 = [14.5201, 45.1111, 23.8662, 25.0989, 38.0844, 8.9517, 46.2902, 37.4108, 8.4831, 4.1256, -0.8031, -13.1327, -17.2980, 8.4598, -2.5428, -31.0067, -2.0328, 0.2527, 5.5134, -14.2564, -23.9233, 0.5574, -6.3333, 0.0355];
b1 = [15.0370   38.0844    4.4759   23.1451  -39.3982  -34.5961   16.9195   -2.5428  -31.0067   -2.0328 0.2527   12.4986   20.5274  -25.6585   12.9610  -20.8529   34.3233   -0.4625   -2.5621   23.2218 -17.9881    0.0945   -6.7913    0.0764];
c1 = [7.9554    4.4759   37.4108    4.2415  -17.2980   -5.0857  -31.0067   16.5403  -28.5128  -23.9233 0.5574    6.8425   12.9610  -10.4264   -7.6864   46.4437  -17.9881    0.0945   18.7720  -42.2763 15.9215    0.4637   16.4309   -0.1676];
d1 = [8.3663   23.1451    4.2415    4.1256    8.4598  -31.0067   -4.0655  -14.2564  -47.8466  -18.9999 0.0355   -8.5528  -10.4264   34.3233   23.2218  -35.9762  -20.3740    0.0764  -14.0921   15.9215 49.2928   -0.1676   23.3197    0.8019];

%call solver
[sols,stats,fail_flag] = solver_pfold([a1;b1;c1;d1],settings);

%selecting solutions
x = sols(1,:);
y = sols(2,:);
z = sols(3,:);
t = sols(4,:);